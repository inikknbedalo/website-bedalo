---
import { getEntry } from 'astro:content';

interface Props {
  title: string;
  url: string;
}

const { title, url } = Astro.props;

// Load sharing configuration
const sharingConfigEntry = await getEntry('config', 'sharing');

if (!sharingConfigEntry || !('platforms' in sharingConfigEntry.data)) {
  throw new Error('Sharing configuration not found');
}

const { platforms } = sharingConfigEntry.data;
const enabledPlatforms = platforms.filter(p => p.enabled);
---

<div class="rounded-lg border border-gray-200 bg-gray-50 p-6">
  <h3 class="mb-4 text-lg font-bold text-gray-900">Bagikan Artikel Ini</h3>
  <div class="flex flex-wrap gap-3">
    {enabledPlatforms.map((platform) => (
      <button
        data-share={platform.name}
        class={`flex items-center gap-2 rounded-lg px-4 py-2 text-white transition-colors ${platform.name === 'copy' ? 'bg-gray-600 hover:bg-gray-700' : ''}`}
        aria-label={`Bagikan ke ${platform.label}`}
      >
        <i class={platform.icon}></i>
        <span data-copy-text={platform.name === 'copy' ? 'Salin Link' : undefined}>
          {platform.label}
        </span>
      </button>
    ))}
  </div>
  <div
    id="copy-feedback"
    class="mt-3 hidden rounded bg-green-100 px-3 py-2 text-sm text-green-700"
  >
    <i class="fas fa-check-circle"></i> Tautan disalin!
  </div>
</div>

<script define:vars={{ title, url, platforms: enabledPlatforms }}>
  document.querySelectorAll('[data-share]').forEach((button) => {
    button.addEventListener('click', () => {
      const type = button.getAttribute('data-share');
      const fullUrl = `${window.location.origin}${url}`;
      const text = encodeURIComponent(title);
      
      const platform = platforms.find(p => p.name === type);
      if (!platform) return;
      
      if (type === 'copy') {
        if (navigator.clipboard) {
          navigator.clipboard.writeText(fullUrl).then(() => {
            const feedback = document.getElementById('copy-feedback');
            if (feedback) {
              feedback.classList.remove('hidden');
              setTimeout(() => {
                feedback.classList.add('hidden');
              }, 3000);
            }
          });
        }
      } else {
        const shareUrl = platform.urlTemplate
          .replace('{url}', encodeURIComponent(fullUrl))
          .replace('{text}', text);
        window.open(shareUrl, '_blank', 'width=600,height=400');
      }
    });
  });
</script>
